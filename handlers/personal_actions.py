from aiogram import types
from dispatcher import dp
import config
import re
from bot import BotBD

@dp.message_handler(commands='start')
async def start(message: types.Message):
    if(not BotBD.user_exists(message.from_user.id)):
        BotBD.add_user(message.from_user.id)
    await message.bot.send_message(message.from_user.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')

@dp.message_handler(commands=('spend','s','earned','e'),commands_prefix='/!')
async def record(message: types.Message):
    cmd_var = (('/spend','/s','!spend','!s'),('/earned','/e','!earned','!e'))
    operation = '-' if message.text.startswith(cmd_var[0]) else '+'
    value = message.text
    for i in cmd_var:
        for j in i:
            value = value.replace(j,'').strip()
    if len(value):
        x = re.findall(r"\d+(?:.\d+)?",value)

        if len(x):
            value = float(x[0].replace(',','.'))

            BotBD.add_record(message.from_user.id,operation,value)

            if operation == '-':
                await message.reply('‚úÖ –ó–∞–ø–∏—Å—å –æ —Ä–∞—Å—Ö–æ–¥–µ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!')
            else:
                await message.reply('‚úÖ –ó–∞–ø–∏—Å—å –æ –¥–æ—Ö–æ–¥–µ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞')

        else:
            await message.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–µ—Ç—å —Å—É–º–º—É')
    else:
        await message.reply('–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞')

@dp.message_handler(commands=('history','h'),commands_prefix='/!')
async def history(message: types.Message):
    cmd_var = ('/history','/h','!history','!h')
    within_als = {'day':('today','day','—Å–µ–≥–æ–¥–Ω—è','–¥–µ–Ω—å'),
    'month':('month','–º–µ—Å—è—Ü'),
    'year':('year','–≥–æ–¥')}

    cmd = message.text
    for r in cmd_var:
        cmd = cmd.replace(r,'').strip()
    within = 'day'
    if len(cmd):
        for k in within_als:
            for als in within_als[k]:
                if als == cmd:
                    within = k
    records = BotBD.get_records(message.from_user.id,within)

    if len(records):
        answer = f'üïò –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {within_als[within][-1]}\n\n'
        for r in records:
            answer += "<b>" + ("‚ûñ –†–∞—Å—Ö–æ–¥" if not r[2] else "‚ûï –î–æ—Ö–æ–¥") + "</b>"
            answer += f'-{r[3]}'
            answer += f" <i>({r[4]})</i>\n"

        await message.reply(answer)
    else:
        await message.reply('–¢–∞–∫–∏—Ö –∑–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ')














